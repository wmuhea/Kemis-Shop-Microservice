plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id "com.gorylenko.gradle-git-properties" version "2.2.4"
	id 'java'
	id 'org.sonarqube' version "3.0"
}


// use setters to set the properties to the build

group 'com.famshop.authorization'
version '0.0.1-SNAPSHOT'
description 'Authorization and Account Service of the '
setSourceCompatibility '1.8'

repositories {


	mavenCentral()
}
springBoot  {
	buildInfo()
}
ext {
	set('springCloudVersion', "Hoxton.SR1")
}

test {
	ignoreFailures = true
}

sonarqube {
	properties {
		property "sonar.projectName", "${project.name}"
		property "sonar.projectKey", "${project.group}:${project.name}"
		property "sonar.login", "admin"
		property "sonar.password", "wonde"
	}
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-security'
	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 	'mysql:mysql-connector-java'
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.mapstruct:mapstruct:1.3.1.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'com.fasterxml.jackson.core:jackson-databind'
	runtimeOnly 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
